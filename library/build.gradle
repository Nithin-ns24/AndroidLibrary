plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
    id 'signing'
}

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 30
        versionCode 4
        versionName version
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        externalNativeBuild {
            cmake {
                cppFlags "-fexceptions"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            version "3.10.2"
            path "CMakeLists.txt"
        }
    }
    ndkVersion '21.3.6528147'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'org.apache.commons:commons-lang3:3.9'
    testImplementation 'junit:junit:4.12'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

def siteUrl = 'https://github.com/StringCare/AndroidLibrary'
def gitUrl = 'https://github.com/StringCare/AndroidLibrary.git'

group = "io.github.stringcare"
version = "4.2.1"

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    exclude '**/**.java'
    exclude '**/**.kt'
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

afterEvaluate {
    publishing {
        publications {
            library(MavenPublication) {
                artifacts = [javadocJar, sourcesJar]
                from components.release
                artifactId = "library"
                pom {
                    packaging = 'aar'
                    name = 'StringCareAndroidLibrary'
                    description = "Stringcare Android library"
                    url = siteUrl
                    scm {
                        connection = gitUrl
                        developerConnection = gitUrl
                        url = siteUrl
                    }
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'efraespada'
                            name = 'efraespada'
                            email = 'efraespada@gmail.com'
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                //def releaseRepo = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                // def snapshotRepo = "https://oss.sonatype.org/content/repositories/snapshots/"
                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                credentials {
                    username = properties["nexusUsername"]
                    password = properties["nexusPassword"]
                }
            }
        }
    }

    signing {
        useGpgCmd()
        sign publishing.publications.library
    }
}
